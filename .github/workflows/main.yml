name: CI

on:
  push:
    branches:
      - feature/cicd


jobs:
  build:

    runs-on: ubuntu-latest
    services:
      db_test:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: 'test_db'
          MYSQL_USER: 'user'
          MYSQL_PASSWORD: 'password'
        ports:
        - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    env:
      FLASK_APP: main
      FLASK_ENV: development
      CONFIG_MODE: 'config.Test'
      PYTHONUNBUFFERED: 1
      GOOGLE_BUCKET_PREFIX: https://storage.googleapis.com/
      GOOGLE_DISCOVERY_URL: https://accounts.google.com/.well-known/openid-configuration
      FACEBOOK_AUTHORIZE_URL: https://graph.facebook.com/oauth/authorize
      FACEBOOK_ACCESS_TOKEN_URL: https://graph.facebook.com/oauth/access_token
      FACEBOOK_USER_INFO_URL: https://graph.facebook.com/me?fields=email
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID}}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET}}
      FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID}}
      FACEBOOK_CLIENT_SECRET:  ${{ secrets.FACEBOOK_CLIENT_SECRET}}
      GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT}}
      GOOGLE_BUCKET: ${{ secrets.GOOGLE_BUCKET}}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS}}
      DATABASE_URI: ${{ secrets.DATABASE_URI}}

    steps:
    - name: Retreiving the repo
      uses: actions/checkout@v1
    - name: Set up Python 
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    # You can test your matrix by printing the current Python version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install 

    # - name: Setting up GCloud Auth
    #     uses: actions/gcloud/auth@master
    #     env:
    #       GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
    - name: create .env file
      run: cp env .env
      working-directory: ./app
    - name: Change variables in .env
      run: |
        sh ../deployment_automation/replace_variables.sh .env
      working-directory: ./app
    - name: Run the tests
      run: pipenv run python tests/tests.py
      working-directory: ./app
    # - name: Build the docker-compose stack
    #   run: docker-compose -f docker-compose-cicd.yaml up -d
    #   working-directory: ./development_environment
    # - name: Docker info
    #   run: docker info
    # - name: Docker ps
    #   run: docker ps
    # - name: Runnint the tests...
    #   run: docker exec -i "$(docker-compose -f docker-compose-cicd.yaml ps -q backend)" pipenv run python tests/tests.py
    #   working-directory: ./development_environment
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    - name: Change variables in app.yaml
      run: |
        sh ../deployment_automation/replace_variables.sh app.yaml
      working-directory: ./app
    # - name: Run deployment
    #     if: success()
    #     uses: actions/gcloud/cli@master
    #     env:
    #       CLOUDSDK_CORE_PROJECT: YOUR_GCP_PROJECT_NAME
    #     with:
    #       entrypoint: gcloud
    #       args: app deploy ./app.yaml --quiet



